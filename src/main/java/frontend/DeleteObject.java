/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.InventoryComponent;
import backend.ProductManagement;
import com.formdev.flatlaf.FlatDarkLaf;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author mrswi
 */
public class DeleteObject extends javax.swing.JFrame {
    
    private String catType = "Subcategory";
    private String catName = "Shoes";
    private ProductManagement productManagement;
    private InventoryComponent subcat;
    private InventoryComponent category;
    /**
     * Creates new form DeleteCategory
     */
    public DeleteObject() {
        initComponents();
    }
    public DeleteObject(String deleteType, String deleteName, ProductManagement mainClass, InventoryComponent subcategory, InventoryComponent cat) {
        catType = deleteType;
        subcat = subcategory;
        productManagement = mainClass;
        catName = deleteName;
        category = cat;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrameDelete = new javax.swing.JInternalFrame();
        textFieldDeleteHeader = new javax.swing.JTextField();
        buttonDelete = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        layeredPaneDeleteContent = new javax.swing.JLayeredPane();
        labelDeleteText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Confirm Delete");
        setAlwaysOnTop(true);
        setIconImages(null);
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        setName("DelCatFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(640, 480));

        internalFrameDelete.setBorder(null);
        internalFrameDelete.setClosable(true);
        internalFrameDelete.setTitle("Confirm Delete");
        internalFrameDelete.setFrameIcon(null);
        internalFrameDelete.setMaximumSize(new java.awt.Dimension(640, 480));
        internalFrameDelete.setOpaque(true);
        internalFrameDelete.setPreferredSize(new java.awt.Dimension(640, 480));
        internalFrameDelete.setVisible(true);

        textFieldDeleteHeader.setEditable(false);
        textFieldDeleteHeader.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        textFieldDeleteHeader.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textFieldDeleteHeader.setText("Are you sure?");
        textFieldDeleteHeader.setBorder(null);
        textFieldDeleteHeader.setFocusable(false);
        textFieldDeleteHeader.setName("popupTitle"); // NOI18N

        buttonDelete.setBackground(new java.awt.Color(150, 80, 82));
        buttonDelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonDelete.setText("Delete");
        buttonDelete.setToolTipText("");
        buttonDelete.setBorderPainted(false);
        buttonDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonDelete.setFocusPainted(false);
        buttonDelete.setFocusable(false);
        buttonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonCancel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonCancel.setText("Cancel");
        buttonCancel.setToolTipText("");
        buttonCancel.setBorderPainted(false);
        buttonCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonCancel.setFocusPainted(false);
        buttonCancel.setFocusable(false);
        buttonCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonCancel.setPreferredSize(new java.awt.Dimension(85, 32));
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        layeredPaneDeleteContent.setBackground(new java.awt.Color(76, 76, 76));
        layeredPaneDeleteContent.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(50, 50, 50), 1, true));
        layeredPaneDeleteContent.setFocusable(false);
        layeredPaneDeleteContent.setOpaque(true);

        labelDeleteText.setBackground(new java.awt.Color(76, 76, 76));
        labelDeleteText.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        labelDeleteText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDeleteText.setText("<html><center>You are about to delete the " + catType + " \"<em>" + catName + "</em>\". Did you mean to perform this action?<br><br>Press \"<em>Delete</em>\" to delete the " + catType + ", or \"<em>Cancel</em>\" to cancel and return to the previous window.");
        labelDeleteText.setToolTipText("");
        labelDeleteText.setAlignmentX(0.5F);
        labelDeleteText.setFocusable(false);
        labelDeleteText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelDeleteText.setIconTextGap(10);
        labelDeleteText.setInheritsPopupMenu(false);
        labelDeleteText.setOpaque(true);
        labelDeleteText.setPreferredSize(new java.awt.Dimension(520, 270));

        layeredPaneDeleteContent.setLayer(labelDeleteText, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layeredPaneDeleteContentLayout = new javax.swing.GroupLayout(layeredPaneDeleteContent);
        layeredPaneDeleteContent.setLayout(layeredPaneDeleteContentLayout);
        layeredPaneDeleteContentLayout.setHorizontalGroup(
            layeredPaneDeleteContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layeredPaneDeleteContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelDeleteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layeredPaneDeleteContentLayout.setVerticalGroup(
            layeredPaneDeleteContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layeredPaneDeleteContentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelDeleteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout internalFrameDeleteLayout = new javax.swing.GroupLayout(internalFrameDelete.getContentPane());
        internalFrameDelete.getContentPane().setLayout(internalFrameDeleteLayout);
        internalFrameDeleteLayout.setHorizontalGroup(
            internalFrameDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, internalFrameDeleteLayout.createSequentialGroup()
                .addComponent(textFieldDeleteHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(internalFrameDeleteLayout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, internalFrameDeleteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(layeredPaneDeleteContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );
        internalFrameDeleteLayout.setVerticalGroup(
            internalFrameDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(internalFrameDeleteLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(textFieldDeleteHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(layeredPaneDeleteContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(internalFrameDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(internalFrameDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(internalFrameDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        // TODO add your handling code here:
        super.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        switch (catType) {
            case "Category":

                // Check if the category exists
                for (InventoryComponent category : productManagement.getCategories().values()) {
                    if (category.getName().equals(catName.trim())) {

                        // Check for subcategories
                        if (!category.getComponents().isEmpty()) {
                            new ErrorPopup("The <b>selected category contains subcategories</b>. Please make sure the category is empty.").setVisible(true);
                            super.dispose();
                        } else {
                            // Delete the category from the CSV file
                            CategoriesGUI.setDeletePushed(true);
                            String filePath = "categoryData.csv";
                            productManagement.getCategories().remove(category.getId());

                            String dataToRemove = category.getId() + "␟,␟" + category.getName();
                            try {
                                productManagement.deleteDataFromFile(dataToRemove, filePath);
                            } catch (IOException ex) {
                                Logger.getLogger(DeleteObject.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            super.dispose();
                        }
                        break;
                    }
                }
                
                break;
                
            case "Subcategory":

                // Check if the subcategory exists
                for (InventoryComponent subcategory : category.getComponents()) {
                    if (subcategory.getName().equalsIgnoreCase(catName)) {
                        if (!subcategory.getComponents().isEmpty()) {
                            new ErrorPopup("The <b>selected subcategory contains products</b>. Please make sure the subcategory is empty.").setVisible(true);
                            super.dispose();
                        } else {
                            // Delete the subcategory from the CSV file
                            CategoriesGUI.setDeletePushed(true);
                            String filePath = "subcategoryData.csv";
                            category.getComponents().remove(subcategory);
                            
                            String dataToRemove = subcategory.getId() + "␟,␟" + subcategory.getName();
                            try {
                                productManagement.deleteDataFromFile(dataToRemove, filePath);
                            } catch (IOException ex) {
                                Logger.getLogger(DeleteObject.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            super.dispose();
                        }
                        break;
                    }
                }
                break;
                
            case "Product":
            	   
                for (InventoryComponent product : subcat.getComponents()) {
                    if (product.getName().equalsIgnoreCase(catName)) {
                        // Delete the product from the CSV file
                        String filePath = "productData.csv";
                        subcat.getComponents().remove(product);
                        String dataToRemove = String.format("%s␟,␟%s␟,␟%s␟,␟%s␟,␟%s", product.getId(), product.getName(),
                            product.getDescription(), product.getPurchasePrice(), product.getPurchaseDate());
                        try {
                            productManagement.deleteDataFromFile(dataToRemove, filePath);
                        } catch (IOException ex) {
                            Logger.getLogger(DeleteObject.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        super.dispose();
                        break;
                    }
                }
                break;
                
            default:
                System.out.println("No object type selected to delete. Exiting program...");
                System.exit(0);
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            javax.swing.UIManager.setLookAndFeel(new FlatDarkLaf());
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new DeleteObject().setVisible(true);
                }
            });
        } catch (UnsupportedLookAndFeelException ex) {
             java.util.logging.Logger.getLogger(DeleteObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JInternalFrame internalFrameDelete;
    private javax.swing.JLabel labelDeleteText;
    private javax.swing.JLayeredPane layeredPaneDeleteContent;
    private javax.swing.JTextField textFieldDeleteHeader;
    // End of variables declaration//GEN-END:variables
}
